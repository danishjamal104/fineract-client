/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * The version of the OpenAPI document: 1.5.0-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * LoanProductBorrowerCycleVariationData
 */

public class LoanProductBorrowerCycleVariationData {
  public static final String SERIALIZED_NAME_BORROWER_CYCLE_NUMBER = "borrowerCycleNumber";
  @SerializedName(SERIALIZED_NAME_BORROWER_CYCLE_NUMBER)
  private Integer borrowerCycleNumber;

  /**
   * Gets or Sets paramType
   */
  @JsonAdapter(ParamTypeEnum.Adapter.class)
  public enum ParamTypeEnum {
    INVALID("INVALID"),
    
    PRINCIPAL("PRINCIPAL"),
    
    INTERESTRATE("INTERESTRATE"),
    
    REPAYMENT("REPAYMENT");

    private String value;

    ParamTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ParamTypeEnum fromValue(String value) {
      for (ParamTypeEnum b : ParamTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ParamTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ParamTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ParamTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ParamTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PARAM_TYPE = "paramType";
  @SerializedName(SERIALIZED_NAME_PARAM_TYPE)
  private ParamTypeEnum paramType;

  /**
   * Gets or Sets valueConditionType
   */
  @JsonAdapter(ValueConditionTypeEnum.Adapter.class)
  public enum ValueConditionTypeEnum {
    INVALID("INVALID"),
    
    EQUAL("EQUAL"),
    
    GREATERTHAN("GREATERTHAN");

    private String value;

    ValueConditionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValueConditionTypeEnum fromValue(String value) {
      for (ValueConditionTypeEnum b : ValueConditionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ValueConditionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValueConditionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValueConditionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ValueConditionTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VALUE_CONDITION_TYPE = "valueConditionType";
  @SerializedName(SERIALIZED_NAME_VALUE_CONDITION_TYPE)
  private ValueConditionTypeEnum valueConditionType;

  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private BigDecimal defaultValue;


  public LoanProductBorrowerCycleVariationData borrowerCycleNumber(Integer borrowerCycleNumber) {
    
    this.borrowerCycleNumber = borrowerCycleNumber;
    return this;
  }

   /**
   * Get borrowerCycleNumber
   * @return borrowerCycleNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBorrowerCycleNumber() {
    return borrowerCycleNumber;
  }


  public void setBorrowerCycleNumber(Integer borrowerCycleNumber) {
    this.borrowerCycleNumber = borrowerCycleNumber;
  }


  public LoanProductBorrowerCycleVariationData paramType(ParamTypeEnum paramType) {
    
    this.paramType = paramType;
    return this;
  }

   /**
   * Get paramType
   * @return paramType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ParamTypeEnum getParamType() {
    return paramType;
  }


  public void setParamType(ParamTypeEnum paramType) {
    this.paramType = paramType;
  }


  public LoanProductBorrowerCycleVariationData valueConditionType(ValueConditionTypeEnum valueConditionType) {
    
    this.valueConditionType = valueConditionType;
    return this;
  }

   /**
   * Get valueConditionType
   * @return valueConditionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ValueConditionTypeEnum getValueConditionType() {
    return valueConditionType;
  }


  public void setValueConditionType(ValueConditionTypeEnum valueConditionType) {
    this.valueConditionType = valueConditionType;
  }


  public LoanProductBorrowerCycleVariationData defaultValue(BigDecimal defaultValue) {
    
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getDefaultValue() {
    return defaultValue;
  }


  public void setDefaultValue(BigDecimal defaultValue) {
    this.defaultValue = defaultValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoanProductBorrowerCycleVariationData loanProductBorrowerCycleVariationData = (LoanProductBorrowerCycleVariationData) o;
    return Objects.equals(this.borrowerCycleNumber, loanProductBorrowerCycleVariationData.borrowerCycleNumber) &&
        Objects.equals(this.paramType, loanProductBorrowerCycleVariationData.paramType) &&
        Objects.equals(this.valueConditionType, loanProductBorrowerCycleVariationData.valueConditionType) &&
        Objects.equals(this.defaultValue, loanProductBorrowerCycleVariationData.defaultValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(borrowerCycleNumber, paramType, valueConditionType, defaultValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoanProductBorrowerCycleVariationData {\n");
    sb.append("    borrowerCycleNumber: ").append(toIndentedString(borrowerCycleNumber)).append("\n");
    sb.append("    paramType: ").append(toIndentedString(paramType)).append("\n");
    sb.append("    valueConditionType: ").append(toIndentedString(valueConditionType)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

