/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Apache Fineract
 * Apache Fineract is a secure, multi-tenanted microfinance platform  The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform<br>The [reference app](https://cui.fineract.dev) (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation  - The API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) - Find out more about Apache Fineract [here](/fineract-provider/api-docs/apiLive.htm#top) - You can [Try The API From Your Browser](/fineract-provider/api-docs/apiLive.htm#interact) - The Generic Options are available [here](/fineract-provider/api-docs/apiLive.htm#genopts) - Find out more about [Updating Dates and Numbers](/fineract-provider/api-docs/apiLive.htm#dates_and_numbers) - For the Authentication and the Basic of HTTP and HTTPS refer [here](/fineract-provider/api-docs/apiLive.htm#authentication_overview) - Check about ERROR codes [here](/fineract-provider/api-docs/apiLive.htm#errors)  Please refer to the [old documentation](/fineract-provider/api-docs/apiLive.htm) for any documentation queries
 *
 * The version of the OpenAPI document: 1.5.0-dirty
 * Contact: dev@fineract.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.fineract.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InteropIdentifierRequestData
 */

public class InteropIdentifierRequestData {
  /**
   * Gets or Sets idType
   */
  @JsonAdapter(IdTypeEnum.Adapter.class)
  public enum IdTypeEnum {
    MSISDN("MSISDN"),
    
    EMAIL("EMAIL"),
    
    PERSONAL_ID("PERSONAL_ID"),
    
    BUSINESS("BUSINESS"),
    
    DEVICE("DEVICE"),
    
    ACCOUNT_ID("ACCOUNT_ID"),
    
    IBAN("IBAN"),
    
    ALIAS("ALIAS");

    private String value;

    IdTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IdTypeEnum fromValue(String value) {
      for (IdTypeEnum b : IdTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IdTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IdTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IdTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IdTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ID_TYPE = "idType";
  @SerializedName(SERIALIZED_NAME_ID_TYPE)
  private IdTypeEnum idType;

  public static final String SERIALIZED_NAME_ID_VALUE = "idValue";
  @SerializedName(SERIALIZED_NAME_ID_VALUE)
  private String idValue;

  public static final String SERIALIZED_NAME_SUB_ID_OR_TYPE = "subIdOrType";
  @SerializedName(SERIALIZED_NAME_SUB_ID_OR_TYPE)
  private String subIdOrType;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;


  public InteropIdentifierRequestData idType(IdTypeEnum idType) {
    
    this.idType = idType;
    return this;
  }

   /**
   * Get idType
   * @return idType
  **/
  @ApiModelProperty(required = true, value = "")

  public IdTypeEnum getIdType() {
    return idType;
  }


  public void setIdType(IdTypeEnum idType) {
    this.idType = idType;
  }


  public InteropIdentifierRequestData idValue(String idValue) {
    
    this.idValue = idValue;
    return this;
  }

   /**
   * Get idValue
   * @return idValue
  **/
  @ApiModelProperty(required = true, value = "")

  public String getIdValue() {
    return idValue;
  }


  public void setIdValue(String idValue) {
    this.idValue = idValue;
  }


  public InteropIdentifierRequestData subIdOrType(String subIdOrType) {
    
    this.subIdOrType = subIdOrType;
    return this;
  }

   /**
   * Get subIdOrType
   * @return subIdOrType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubIdOrType() {
    return subIdOrType;
  }


  public void setSubIdOrType(String subIdOrType) {
    this.subIdOrType = subIdOrType;
  }


  public InteropIdentifierRequestData accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InteropIdentifierRequestData interopIdentifierRequestData = (InteropIdentifierRequestData) o;
    return Objects.equals(this.idType, interopIdentifierRequestData.idType) &&
        Objects.equals(this.idValue, interopIdentifierRequestData.idValue) &&
        Objects.equals(this.subIdOrType, interopIdentifierRequestData.subIdOrType) &&
        Objects.equals(this.accountId, interopIdentifierRequestData.accountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idType, idValue, subIdOrType, accountId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InteropIdentifierRequestData {\n");
    sb.append("    idType: ").append(toIndentedString(idType)).append("\n");
    sb.append("    idValue: ").append(toIndentedString(idValue)).append("\n");
    sb.append("    subIdOrType: ").append(toIndentedString(subIdOrType)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

